@entity_x				= 0
@entity_y 				= -20

masc_gene_manager_0 = {
	entity = "construction_platform_entity"
	construction_entity = "construction_platform_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = @entity_y y = @entity_y }
	build_time = 1800
	resources = {
		category = megastructures
		cost = {
			alloys = 5000
			influence = 300
		}

		upkeep = {
			energy = 5
		}
	}
	
	prerequisites = { "tech_masc_gene_manager" }
	
	possible = {
		exists = starbase
		custom_tooltip = {
			fail_text = "requires_inside_border"
			is_inside_border = from
		}
		custom_tooltip = {
			fail_text = "requires_no_existing_megastructure"
			has_no_non_gate_megastructure = yes
		}
		custom_tooltip = {
			fail_text = "requires_surveyed_system"
			NOT = {
				any_system_planet = {
					is_surveyed = {
						who = prev.from
						status = no
					}
				}
			}
		}
		custom_tooltip = {
			fail_text = "requires_no_existing_masc_gene_manager"
			from = { NOT = { has_country_flag = built_gene_manager } }
		}
	}
	
	placement_rules = {
		planet_possible = {
			custom_tooltip = {
				fail_text = "requires_survey_not_habitable"
				is_surveyed = {			# prevent leaking habitability information
					who = prev.from
					status = yes
				}
				colonizeable_planet = no
			}
			custom_tooltip = {
				fail_text = "requires_no_anomaly"
				NOT = { has_anomaly = yes }
			}
			custom_tooltip = {
				fail_text = "requires_not_minor_planetary_body"
				NOR = {
					is_asteroid = yes
					is_moon = yes
				}
			}
			custom_tooltip = {
				fail_text = "requires_not_star"
				is_star = no
			}
			custom_tooltip = {
				fail_text = "requires_not_ring_world"
				is_ringworld = no
			}
		} # use these for all non-star megastructures
	}
	
	# root = system
	# from = country	
	ai_weight = {
		factor = 10
		modifier = {
			factor = 0.1
			starbase = { NOT = { has_starbase_size >= starbase_starfortress } }
		}	

		modifier = {
			factor = 0.1
			any_neighbor_system = {
				exists = owner
				NOT = { 
					owner = { is_same_value = from } 
				}
			}
		}		
		
		modifier = {
			factor = 2.0
			from = {
				OR = {
					has_ethic = ethic_materialist
					has_ethic = ethic_fanatic_materialist
				}			
			}
		}
	}
	
	on_build_start = {}
	on_build_cancel = {}
	on_build_complete = {
		set_star_flag = gene_manager_built
		fromfrom.planet = {
			set_planet_flag = has_megastructure
		}
		from = { set_country_flag = built_gene_manager }
	}
}

masc_gene_manager_1 = {
	entity = "habitat_phase_01_entity"
	construction_entity = "habitat_phase_01_entity"
	portrait = "GFX_megastructure_construction_background"	
	place_entity_on_planet_plane = no
	entity_offset = { x = @entity_x y = @entity_y }
	build_time = 3600
	resources = {
		category = megastructures
		cost = {
			alloys = 15000
		}

		upkeep = {
			energy = 25
		}

		produces = {
			#society_research = 100
		}
	}
	
	upgrade_from = {
		masc_gene_manager_0
	}
	
	prerequisites = { "tech_masc_gene_manager" }
	
	country_modifier = {
		BIOLOGICAL_species_trait_points_add = 3
		modify_species_cost_mult = -0.15
		pop_growth_speed = 0.05
		planet_jobs_worker_produces_mult = 0.05
		category_biology_research_speed_mult = 0.05
		species_empire_size_mult = -0.05
	}
}

masc_gene_manager_2 = {
	entity = "habitat_phase_02_entity"
	construction_entity = "habitat_phase_02_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = @entity_x y = @entity_y }
	build_time = 3600
	resources = {
		category = megastructures
		cost = {
			alloys = 15000
		}

		upkeep = {
			energy = 50
		}

		produces = {
			#society_research = 150
		}
	}

	upgrade_from = {
		masc_gene_manager_1
	}
	
	prerequisites = { "tech_masc_gene_manager" }
	
	country_modifier = {
		BIOLOGICAL_species_trait_points_add = 6
		modify_species_cost_mult = -0.30
		pop_growth_speed = 0.1
		planet_jobs_worker_produces_mult = 0.1
		category_biology_research_speed_mult = 0.1
		species_empire_size_mult = -0.1
	}
}

masc_gene_manager_3 = {
	entity = "habitat_phase_03_entity"
	construction_entity = "habitat_phase_03_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = @entity_x y = @entity_y }
	build_time = 3600
	resources = {
		category = megastructures
		cost = {
			alloys = 15000
		}

		upkeep = {
			energy = 75
		}

		produces = {
			#society_research = 200
		}
	}

	upgrade_from = {
		masc_gene_manager_2
	}
	
	on_build_complete = {
		from = {
			set_country_flag = has_built_or_repaired_megastructure
		}
	}

	prerequisites = { "tech_masc_gene_manager" }
	show_prereqs = yes
	
	country_modifier = {
		BIOLOGICAL_species_trait_points_add = 9
		modify_species_cost_mult = -0.45
		pop_growth_speed = 0.15
		planet_jobs_worker_produces_mult = 0.15
		category_biology_research_speed_mult = 0.15
		species_empire_size_mult = -0.15
	}
}

# Ruined Gene Manager
masc_gene_manager_ruined = {
	entity = "think_tank_destroyed_01_entity"
	portrait = "GFX_megastructure_construction_background"

	place_entity_on_planet_plane = no
	entity_offset = { x = @entity_x y = @entity_y }

	potential = {
		always = no
	}
}

# Restored Gene Manager
masc_gene_manager_restored = {
	entity = "habitat_phase_03_entity"
	construction_entity = "habitat_phase_03_entity"
	portrait = "GFX_megastructure_construction_background"
	place_entity_on_planet_plane = no
	entity_offset = { x = @entity_x y = @entity_y }
	build_time = 4800
	resources = {
		category = megastructures
		cost = {
			alloys = 15000
		}

		upkeep = {
			energy = 75
		}

		produces = {
			#society_research = 200
		}
	}

	upgrade_from = {
		masc_gene_manager_ruined
	}	

	possible = {
		from = {
			has_technology = tech_mega_engineering
			has_technology = tech_glandular_acclimation
		}	
	}
	
	country_modifier = {
		all_technology_research_speed = 0.15
		pop_growth_speed = 0.15
		planet_jobs_worker_produces_mult = 0.15
		category_biology_research_speed_mult = 0.15
		species_empire_size_mult = -0.15
	}

	on_build_start = {
		fromfrom = {
			set_graphical_culture = root.from
		}
	}

	on_build_complete = {
		every_system_ambient_object = { destroy_ambient_object = this }
		from = {
			set_country_flag = has_built_or_repaired_megastructure
			country_event = { id = masc.1009 }
		}
	}
}
