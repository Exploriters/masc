
# Executed as a leader has died
# This = Country
# From = Leader
on_leader_death = {
	events = {
		masc.2101
	}
}

# Executed when a ruler has been removed
# From = Previous Ruler
# This = Country
on_ruler_removed = {
	events = {
		masc.2101
	}
}

# A ship has surveyed a planet.
# Scope = Ship
# From = Planet
on_survey = {
	events = {
		masc.3002
	}
}

# A Megastructure has been built
# Root = Country
# From = Megastructure
# FromFrom = System
# FromFromFrom = Fleet
on_megastructure_built = {
	events = {
		masc.1000# Gene Manager Site Built
	}
}

# A Megastructure has begun to be upgraded
# Root = Country
# From = Megastructure
# FromFrom = System
on_megastructure_upgrade_begin = {
	events = {
	}
}

# A Megastructure has been upgraded
# Root = Country
# From = Megastructure
# FromFrom = System
on_megastructure_upgraded = {
	events = {
		masc.1001 # Neighbor begins building Gene Manager
		masc.1003 # Gene Manager built 1
		masc.1004 # Gene Manager built 2
		masc.1005 # Gene Manager built 3
		
		masc.3001 # Ambient object restore
	}
}

# Triggers event when each country first sends a ship into the system (once per country)
# Scope = Ship
# From = System
# FromFrom = Country
on_entering_system_first_time = {
	events = {
		masc.1008 # Gene Manager ruin detected
	}
}

# Executes after a policy has been changed
# use last_changed_policy to identify which policy it was
# This = Country
on_policy_changed = {
	events = {
		masc.5005
	}
}

# A ship has been built
# Root = Ship
# From = Planet
on_ship_built = {
	events = {
		masc.5006
	}
}

# A ship has been upgraded
#  Root = Ship
on_ship_upgraded = {
	events = {
		masc.5006
		masc.5007
	}
}


# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = {
		masc.19
	}
}
